<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard1.0;net40</TargetFrameworks>
    <Version>4.2.0</Version>
    <Authors>Faron Bracy</Authors>
    <Company />
    <Description>A .NET Standard class library providing map generation, path-finding, and field-of-view utilities frequently used in roguelikes or 2D tile based games. Inspired by libtcod

New features:
   * Optimized cave map generator (Thanks to James Neal)
   * Optimized DijkstraShortestPath.FindPath method (Thanks to flend for this update)
   * Multiple new "Try" methods which return null instead of throwing exceptions
   * Diagonal paths can be found by using new constructors on GoalMap and PathFinder
   * Map.GetCellsInCircle and Map.GetBorderCellsInCircle to get cells within a circular radius
Breaking changes:
   * Bug fix (4.2.0) - EdgeWeightedDigraph updates NumberOfEdges property when new edge is added
   * Bug fix (4.1.0) - selecting border cells along edge of map no longer selects center cell
   * Point and Rectangle classes are now structs (Thanks to James Neal)
   * Updated all appropriate references to Cell with ICell (Thanks to Courtney Strachan)
   * Map.ComputeFov and Map.AppendFov both return a ReadonlyCollection of ICell instead void
   * The Path returned from PathFinder.ShortestPath now includes the source cell in the returned Path 
   * Map.GetCellsInArea was renamed to Map.GetCellsInSquare
   * Map.GetCellsInRadius was renamed to Map.GetCellsInDiamond</Description>
    <PackageReleaseNotes>A .NET Standard class library providing map generation, path-finding, and field-of-view utilities frequently used in roguelikes or 2D tile based games. Inspired by libtcod

New features:
   * Optimized cave map generator (Thanks to James Neal)
   * Optimized DijkstraShortestPath.FindPath method (Thanks to flend for this update)
   * Multiple new "Try" methods which return null instead of throwing exceptions
   * Diagonal paths can be found by using new constructors on GoalMap and PathFinder
   * Map.GetCellsInCircle and Map.GetBorderCellsInCircle to get cells within a circular radius
Breaking changes:
   * Bug fix (4.2.0) - EdgeWeightedDigraph updates NumberOfEdges property when new edge is added
   * Bug fix (4.1.0) - selecting border cells along edge of map no longer selects center cell
   * Point and Rectangle classes are now structs (Thanks to James Neal)
   * Updated all appropriate references to Cell with ICell (Thanks to Courtney Strachan)
   * Map.ComputeFov and Map.AppendFov both return a ReadonlyCollection of ICell instead void
   * The Path returned from PathFinder.ShortestPath now includes the source cell in the returned Path 
   * Map.GetCellsInArea was renamed to Map.GetCellsInSquare
   * Map.GetCellsInRadius was renamed to Map.GetCellsInDiamond</PackageReleaseNotes>
    <Copyright>Copyright 2014-2019 Faron Bracy</Copyright>
    <PackageLicenseUrl>https://github.com/FaronBracy/RogueSharp/blob/master/LICENSE.txt</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/FaronBracy/RogueSharp</PackageProjectUrl>
    <RepositoryUrl>https://github.com/FaronBracy/RogueSharp.git</RepositoryUrl>
    <RepositoryType>Git</RepositoryType>
    <PackageTags>roguelike libtcod pathfinding game map random generator field-of-view fog-of-war dice</PackageTags>
    <PackageIconUrl>https://content.screencast.com/users/dr.zeus/folders/Blog%20Links/media/66acf3c6-3b44-4bdd-b1f5-e89a62489b20/nugeticon.png</PackageIconUrl>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DocumentationFile>bin\Debug\netstandard1.0\RogueSharp.xml</DocumentationFile>
  </PropertyGroup>

</Project>
